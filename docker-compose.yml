version: "3.7"

networks:
    app-network:
        driver: bridge

services:
    app:
        build:
            context: ./
            dockerfile: Dockerfile
        image: php8.1.3-fpm
        container_name: app
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - app-network

    mysql:
        image: mysql:8.0.28
        command: mysqld --sql_mode="" --character-set-server=utf8mb4 --innodb-use-native-aio=0
        container_name: mysql
        restart: unless-stopped
        tty: true
        environment:
            MYSQL_ROOT_PASSWORD: consys
            MYSQL_PASSWORD: consys
            MYSQL_USER: consys
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./.docker/mysql:/var/lib/mysql
            - ./.docker/init/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - app-network

    nginx:
        image: nginx:1.19.8-alpine
        container_name: nginx
        restart: unless-stopped
        tty: true
        ports:
            - 8100:80
        volumes:
            - ./:/var/www
            - ./.docker/nginx/conf:/etc/nginx/conf.d
        networks:
            - app-network

    redis:
        image: redis:6.2.1-buster
        container_name: redis
        restart: unless-stopped
        tty: true
        volumes:
            - ./.docker/redis/data:/data
        networks:
            - app-network

    mailhog:
        image: mailhog/mailhog:v1.0.1
        container_name: mailhog
        restart: unless-stopped
        ports:
            - 8025:8025
        networks:
            - app-network

    adminer:
        image: adminer
        container_name: adminer
        restart: unless-stopped
        ports:
            - 8008:8080
        networks:
            - app-network
